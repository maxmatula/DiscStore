@model DiscStore.Infrastructure.ViewModels.Product.ProductViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_FluidLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(x => x.ProductID)
        <div class="md-form">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="md-form md-textarea">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="md-form">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="md-form">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="md-form">
            <div class="col-md-10">
                @Html.EditorFor(model => model.PremiereDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.PremiereDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Zdjęcie", htmlAttributes: new { @class = "control-label col-md-2" })

            @if (Model.PictureData == null || Model.PictureData.Length == 0)
            {
                <span class="form-control-static">Brak zdjęcia</span>
            }
            else
            {
                <img class="image-thumbnail" width="200" height="200"
                     src="@Url.Action("GetPicture", "Product", new { productId = Model.ProductID })" />
            }

            <div class="col-md-10">
                <a class="btn">
                    <input type="file" name="file" />
                </a>
            </div>
        </div>

        <div class="md-form">
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.selectedCategoryID, Model.Categories)
                @Html.ValidationMessageFor(model => model.selectedCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.datepicker').pickadate();
    })
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
